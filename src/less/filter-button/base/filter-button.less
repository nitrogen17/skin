@import "../../mixins/utility/utility-mixins.less";

div.filter-group {
    .filter-group();
}

button.filter-button,
a.filter-link {
    .filter-button-base();
    .customBackgroundColorProperty(filter-button-background-color);

    &:focus,
    &:hover,
    &:active {
        .customBackgroundColorProperty(filter-button-hover-background-color);
    }
}

button.filter-button .filter-button__cell,
a.filter-link .filter-link__cell {
    display: inline-block;
    max-width: 258px;
    overflow: hidden;
    pointer-events: none;
    text-overflow: ellipsis;
    white-space: nowrap;
}

a.filter-link:visited {
    .customColorProperty(filter-button-foreground-color);

    color: inherit;
}

button.filter-button[aria-pressed="true"],
a.filter-link--selected {
    .filter-button-selected();
    .customBackgroundColorProperty(filter-button-selected-background-color);
    .customColorProperty(filter-button-selected-foreground-color);

    &:focus,
    &:hover,
    &:active {
        .customBackgroundColorProperty(filter-button-selected-hover-background-color);
    }
}

button.filter-button[disabled],
button.filter-button[aria-disabled="true"],
button.filter-button[aria-pressed="true"][disabled],
button.filter-button[aria-pressed="true"][aria-disabled="true"],
a.filter-link:not([href]),
a.filter-link[aria-disabled="true"],
a.filter-link--selected:not([href]),
a.filter-link--selected[aria-disabled="true"] {
    .filter-button-disabled();

    color: @filter-button-disabled-foreground-color;

    &:hover,
    &:focus {
        background-color: @filter-button-background-color;
        color: @filter-button-disabled-foreground-color;
    }
}

button.filter-button[aria-pressed="true"][disabled]:hover,
button.filter-button[aria-pressed="true"][aria-disabled="true"]:hover,
a.filter-link--selected:not([href]):hover,
a.filter-link--selected[aria-disabled="true"]:hover {
    background-color: @filter-button-selected-background-color;
}
